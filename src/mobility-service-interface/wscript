# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

def configure(conf):
        conf.env.append_value("LINKFLAGS", ["-LGeographic","-L/usr/local/lib/libGeographic.a"])
        conf.env.append_value("LIB", ["Geographic"])
        conf.env['libcurlpp'] = conf.check(mandatory=True, lib='curlpp', uselib_store='CURL')
        conf.env['xercersc'] = conf.check(mandatory=True, lib='xerces-c', uselib_store='XERCES')
        conf.env['ldl'] = conf.check(mandatory=True, lib='dl', uselib_store='LDL')

def build(bld):
        mobility = bld.create_ns3_module('mobility-service-interface', ['mobility'])
        mobility.use.append("CURL")
        mobility.use.append("XERCES")
        mobility.use.append("LDL")
        mobility.source = [
                'model/leg.cc',
                'model/sax-handler.cc',
                'model/google-maps-decoder.cc',
                'model/google-maps-api-connect.cc',
                'model/step.cc',
                'model/point.cc',
                'model/place.cc',
                'model/sax-places-handler.cc',
                'model/google-maps-places-api-connect.cc',
                'helper/routes-mobility-helper.cc',
        ]
        module_test = bld.create_ns3_module_test_library('mobility-service-interface')
        module_test.source = [
                'test/routes-mobility-model-test.cc',
        ]

        headers = bld(features='ns3header')
        headers.module = 'mobility-service-interface'
        headers.source = [
                'model/step.h',
                'model/point.h',
                'model/leg.h',
                'model/sax-handler.h',
                'model/google-maps-api-connect.h',
                'model/google-maps-decoder.h',
                'model/place.h',
                'model/sax-places-handler.h',
                'model/google-maps-places-api-connect.h',
                'model/places-api-connect.h',
                'model/directions-api-connect.h',
                'helper/routes-mobility-helper.h',
        ]

        if bld.env.ENABLE_EXAMPLES:
                bld.recurse('examples')

    # bld.ns3_python_bindings()

